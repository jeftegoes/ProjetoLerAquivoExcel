// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ExcelContext))]
    [Migration("20200926121017_InitializeDDL2")]
    partial class InitializeDDL2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entities.ArquivoExcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataImportacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("MenorDataImportada")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("QuantidadeTotalItens")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotalImportado")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("ArquivoExcel");
                });

            modelBuilder.Entity("Core.Entities.LinhaArquivoExcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdArquivoExcel")
                        .HasColumnType("int");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("IdArquivoExcel");

                    b.ToTable("LinhaArquivoExcel");
                });

            modelBuilder.Entity("Core.Entities.LinhaArquivoExcel", b =>
                {
                    b.HasOne("Core.Entities.ArquivoExcel", "ArquivoExcel")
                        .WithMany()
                        .HasForeignKey("IdArquivoExcel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
